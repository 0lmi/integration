#!/bin/sh
# wraps 'docker-compose up', first setting the
# env vars important for dev environments on OSX
# using docker-machine, assuming just one vm is started through it
set -e -o pipefail

# host entries we need to add
REQHOSTS="s3.docker.mender.io docker.mender.io mender-artifact-storage.s3.docker.mender.io"

log() {
    echo "--" $*
}

addhost() {
    ip=$1
    h=$2
    tmpfile=$3

    hline="$ip $h"
    if ! grep "\s$h" $tmpfile >/dev/null 2>&1 ; then
        echo "$ip $h # added by mender integration" >> $tmpfile
    fi
}

setuphosts() {
    if hash docker-machine 2>/dev/null; then
        DOCKER_HOST_IP=$(docker-machine ip)
    else
        log "docker-machine not found, DOCKER_HOST_IP not exported"
    fi

    REQUIRED_HOSTFILE_IP=${DOCKER_HOST_IP:-"127.0.0.1"}

    tmpfile=$(mktemp /tmp/mender.XXXXX)
    # preserve permission bits from original /etc/hosts file
    chmod $(stat -c '%a' /etc/hosts) $tmpfile

    cp /etc/hosts $tmpfile
    # add hosts as needed
    for h in $REQHOSTS; do
        addhost $REQUIRED_HOSTFILE_IP $h $tmpfile
    done

    if ! cmp /etc/hosts $tmpfile >/dev/null 2>&1 ; then
       log "adding the following entries to /etc/hosts:"
       diff /etc/hosts $tmpfile || true
       mv $tmpfile /etc/hosts
    fi
    rm -f $tmpfile
}

rundocker() {
    docker-compose up
}

showhelp() {
    echo "usage: $(basename $0) [-n] [-h]"
    echo "   -n   do run start docker-compose"
    echo "   -h   show help"
}

case "$1" in
    -h|--help)
        showhelp
        exit 0
        ;;
    -n)
        nodocker=y
        ;;
    *)
        ;;
esac

[ "$(whoami)" == "root" ] || {
    echo "error: run this script as root or use sudo"
    exit 1
}

setuphosts
if [ "$nodocker" != "y" ]; then
    rundocker
fi
